<?php
/**
 * Copyright (c) 2009-2014 Vaimo AB
 *
 * Vaimo reserves all rights in the Program as delivered. The Program
 * or any portion thereof may not be reproduced in any form whatsoever without
 * the written consent of Vaimo, except as provided by licence. A licence
 * under Vaimo's rights in the Program may be available directly from
 * Vaimo.
 *
 * Disclaimer:
 * THIS NOTICE MAY NOT BE REMOVED FROM THE PROGRAM BY ANY USER THEREOF.
 * THE PROGRAM IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE PROGRAM OR THE USE OR OTHER DEALINGS
 * IN THE PROGRAM.
 *
 * @category    Vaimo
 * @package     Vaimo_Menu
 * @copyright   Copyright (c) 2009-2014 Vaimo AB
 */
?>
<?php
$parameters = $this->getParameters();
$category = $this->getCategory();
$class  = $level = 'level' . ($this->_getLevel()-$this->getStartLevel());
$class .= ' nav-' . $category->getUrlKey();
$class .= $this->isInCurrentPath() ? 'active' : '';
$class .= trim($parameters["markers"]) ? (' ' . trim($parameters["markers"])) : '';
$class .= $this->hasChildren() ? ' parent' : '';

// Create a hierarchy in the form of 'level1no-level2no...'
if ($this->_getLevel() >= $this->getStartLevel()) {
    if (!isset($parameters['hierarchy'])) {
        $parameters['hierarchy'] = $parameters['no']+1;
    } else {
        $parameters['hierarchy'] = $parameters['hierarchy'] . '-' . ($parameters['no']+1);
    }
}

if (isset($parameters['hierarchy'])) {
    $class .= ' nav-' . $parameters['hierarchy'];
}
?>

{"item":"<?php echo $this->getCategory()->getName() ?>", "item_class":"<?php echo $class ?>"
<?php if ($this->shouldShowChildren()): ?>
    ,"children": [
    <?php echo $this->renderMenuItem($this->getStartLevel(), $this->getDisplayLevels(), $this->getChildren(), $this->getTemplate(), $parameters); ?>
    ]
<?php endif ?>
},