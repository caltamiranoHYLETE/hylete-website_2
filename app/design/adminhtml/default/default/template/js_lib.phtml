<?php
/**
 * Copyright (c) 2009-2014 Vaimo AB
 *
 * Vaimo reserves all rights in the Program as delivered. The Program
 * or any portion thereof may not be reproduced in any form whatsoever without
 * the written consent of Vaimo, except as provided by licence. A licence
 * under Vaimo's rights in the Program may be available directly from
 * Vaimo.
 *
 * Disclaimer:
 * THIS NOTICE MAY NOT BE REMOVED FROM THE PROGRAM BY ANY USER THEREOF.
 * THE PROGRAM IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE PROGRAM OR THE USE OR OTHER DEALINGS
 * IN THE PROGRAM.
 *
 * @category    Vaimo
 * @package     Vaimo_Menu
 * @copyright   Copyright (c) 2009-2014 Vaimo AB
 * @comment     An abstract approach of instantiating and using js class methods.
 */
?>
<?php if ($calls = $this->getClassInstantiationCalls()): ?>
<script type="application/javascript">
    <?php foreach ($calls as $variable => $data): ?>
        var <?php echo $variable ?> = new <?php echo key($data) ?>(<?php
            echo implode(',', array_map(function ($item) { return json_encode($item); }, current($data)));
        ?>);
        <?php array_shift($data) ?>
        <?php foreach ($data as $call): ?>
            <?php echo $variable ?>.<?php echo key($call) ?>(<?php
            echo implode(',', array_map(function ($item) {
                return json_encode($item);
            }, current($call)));
            ?>);
        <?php endforeach ?>
    <?php endforeach ?>
</script>
<?php endif ?>