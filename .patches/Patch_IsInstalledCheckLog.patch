--- app/Mage.php	(revision )
+++ app/Mage.php	(revision )
@@ -769,7 +769,13 @@
                 if (($date = $localConfig->global->install->date) && strtotime($date)) {
                     self::$_isInstalled = true;
                 }
+            } else {
+                Icommerce_Default::logAppendBT('config file is not readable', 'var/log/check.log');
             }
+        }
+
+        if (self::$_isInstalled != true) {
+            Icommerce_Default::logAppendBT('isInstalled check failed', 'var/log/check.log');
         }

         return self::$_isInstalled;

 --- app/code/core/Mage/Core/Model/Session/Abstract.php	(revision )
 +++ app/code/core/Mage/Core/Model/Session/Abstract.php	(revision )
 @@ -551,9 +551,19 @@
       */
      public function getSessionSavePath()
      {
 -        if (Mage::isInstalled() && $sessionSavePath = Mage::getConfig()->getNode(self::XML_NODE_SESSION_SAVE_PATH)) {
 +        $isInstalled = Mage::isInstalled();
 +
 +        if ($isInstalled) {
 +            $sessionSavePath = Mage::getConfig()->getNode(self::XML_NODE_SESSION_SAVE_PATH);
 +            if ($sessionSavePath) {
 -            return $sessionSavePath;
 +                return $sessionSavePath;
 +            } else {
 +                Icommerce_Default::logAppendBT('::getSessionSavePath -- sessionSavePath value is empty', 'var/log/check.log');
 -        }
 +            }
 +        } else {
 +            Icommerce_Default::logAppendBT('::getSessionSavePath -- isInstalled check failed', 'var/log/check.log');
 +        }
 +
          return parent::getSessionSavePath();
      }

--- app/code/core/Mage/Core/Model/Session/Abstract.php	(revision )
+++ app/code/core/Mage/Core/Model/Session/Abstract.php	(revision )
@@ -538,9 +538,19 @@
      */
     public function getSessionSaveMethod()
     {
-        if (Mage::isInstalled() && $sessionSave = Mage::getConfig()->getNode(self::XML_NODE_SESSION_SAVE)) {
+        $isInstalled = Mage::isInstalled();
+
+        if ($isInstalled) {
+            $sessionSave = Mage::getConfig()->getNode(self::XML_NODE_SESSION_SAVE);
+            if ($sessionSave) {
-            return $sessionSave;
+                return $sessionSave;
+            } else {
+                Icommerce_Default::logAppendBT('::getSessionSaveMethod -- sessionSave value is empty', 'var/log/check.log');
-        }
+            }
+        } else {
+            Icommerce_Default::logAppendBT('::getSessionSaveMethod -- isInstalled check failed', 'var/log/check.log');
+        }
+
         return parent::getSessionSaveMethod();
     }

--- app/code/core/Mage/Core/Model/Session/Abstract/Varien.php	(revision )
+++ app/code/core/Mage/Core/Model/Session/Abstract/Varien.php	(revision )
@@ -55,6 +55,11 @@

        // getSessionSaveMethod has to return correct version of handler in any case
        $moduleName = $this->getSessionSaveMethod();
+
+        if ($moduleName != 'redis') {
+            Icommerce_Default::logAppendBT('::start -- session handler is not redis', 'var/log/check.log');
+        }
+
        switch ($moduleName) {
            /**
             * backward compatibility with db argument (option is @deprecated after 1.12.0.2)

--- app/code/core/Mage/Core/Model/Session/Abstract/Varien.php	(revision )
+++ app/code/core/Mage/Core/Model/Session/Abstract/Varien.php	(revision )
@@ -334,6 +334,7 @@
     */
    public function getSessionSaveMethod()
    {
+        Icommerce_Default::logAppendBT('Abstract_Varien::getSessionSaveMethod', 'var/log/check.log');
        return 'files';
    }

--- app/code/core/Mage/Core/Model/Session/Abstract.php	(revision )
+++ app/code/core/Mage/Core/Model/Session/Abstract.php	(revision )
@@ -542,6 +542,9 @@

         if ($isInstalled) {
             $sessionSave = Mage::getConfig()->getNode(self::XML_NODE_SESSION_SAVE);
+            if ((string)$sessionSave != 'redis') {
+                Icommerce_Default::logAppend("Configuration value: " . (string)$sessionSave, 'var/log/check.log');
+            }
             if ($sessionSave) {
                 return $sessionSave;
             } else {
